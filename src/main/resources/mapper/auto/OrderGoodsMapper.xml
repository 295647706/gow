<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gow.beau.storage.auto.mapper.OrderGoodsMapper">
  <resultMap id="BaseResultMap" type="com.gow.beau.storage.auto.model.OrderGoods">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_spec" jdbcType="VARCHAR" property="goodsSpec" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="goods_info_price" jdbcType="DECIMAL" property="goodsInfoPrice" />
    <result column="goods_info_sum_price" jdbcType="DECIMAL" property="goodsInfoSumPrice" />
    <result column="have_gift_status" jdbcType="CHAR" property="haveGiftStatus" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, goods_id, goods_name, goods_spec, goods_img, comment_id, goods_number, 
    goods_info_price, goods_info_sum_price, have_gift_status, del_flag
  </sql>
  <select id="selectByExample" parameterType="com.gow.beau.storage.auto.model.OrderGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gow_order_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gow_order_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gow_order_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gow.beau.storage.auto.model.OrderGoodsExample">
    delete from gow_order_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.gow.beau.storage.auto.model.OrderGoods" useGeneratedKeys="true">
    insert into gow_order_goods (order_id, goods_id, goods_name, 
      goods_spec, goods_img, comment_id, 
      goods_number, goods_info_price, goods_info_sum_price, 
      have_gift_status, del_flag)
    values (#{orderId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsSpec,jdbcType=VARCHAR}, #{goodsImg,jdbcType=VARCHAR}, #{commentId,jdbcType=BIGINT}, 
      #{goodsNumber,jdbcType=INTEGER}, #{goodsInfoPrice,jdbcType=DECIMAL}, #{goodsInfoSumPrice,jdbcType=DECIMAL}, 
      #{haveGiftStatus,jdbcType=CHAR}, #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.gow.beau.storage.auto.model.OrderGoods" useGeneratedKeys="true">
    insert into gow_order_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsSpec != null">
        goods_spec,
      </if>
      <if test="goodsImg != null">
        goods_img,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="goodsInfoPrice != null">
        goods_info_price,
      </if>
      <if test="goodsInfoSumPrice != null">
        goods_info_sum_price,
      </if>
      <if test="haveGiftStatus != null">
        have_gift_status,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpec != null">
        #{goodsSpec,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="goodsInfoPrice != null">
        #{goodsInfoPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsInfoSumPrice != null">
        #{goodsInfoSumPrice,jdbcType=DECIMAL},
      </if>
      <if test="haveGiftStatus != null">
        #{haveGiftStatus,jdbcType=CHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gow.beau.storage.auto.model.OrderGoodsExample" resultType="java.lang.Long">
    select count(*) from gow_order_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gow_order_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpec != null">
        goods_spec = #{record.goodsSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsImg != null">
        goods_img = #{record.goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsNumber != null">
        goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.goodsInfoPrice != null">
        goods_info_price = #{record.goodsInfoPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsInfoSumPrice != null">
        goods_info_sum_price = #{record.goodsInfoSumPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.haveGiftStatus != null">
        have_gift_status = #{record.haveGiftStatus,jdbcType=CHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gow_order_goods
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spec = #{record.goodsSpec,jdbcType=VARCHAR},
      goods_img = #{record.goodsImg,jdbcType=VARCHAR},
      comment_id = #{record.commentId,jdbcType=BIGINT},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      goods_info_price = #{record.goodsInfoPrice,jdbcType=DECIMAL},
      goods_info_sum_price = #{record.goodsInfoSumPrice,jdbcType=DECIMAL},
      have_gift_status = #{record.haveGiftStatus,jdbcType=CHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gow.beau.storage.auto.model.OrderGoods">
    update gow_order_goods
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpec != null">
        goods_spec = #{goodsSpec,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        goods_img = #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=BIGINT},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="goodsInfoPrice != null">
        goods_info_price = #{goodsInfoPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsInfoSumPrice != null">
        goods_info_sum_price = #{goodsInfoSumPrice,jdbcType=DECIMAL},
      </if>
      <if test="haveGiftStatus != null">
        have_gift_status = #{haveGiftStatus,jdbcType=CHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gow.beau.storage.auto.model.OrderGoods">
    update gow_order_goods
    set order_id = #{orderId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=BIGINT},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_spec = #{goodsSpec,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      comment_id = #{commentId,jdbcType=BIGINT},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      goods_info_price = #{goodsInfoPrice,jdbcType=DECIMAL},
      goods_info_sum_price = #{goodsInfoSumPrice,jdbcType=DECIMAL},
      have_gift_status = #{haveGiftStatus,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>