<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gow.beau.storage.auto.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.gow.beau.storage.auto.model.Goods">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_spec" jdbcType="VARCHAR" property="goodsSpec" />
    <result column="goods_subtitle" jdbcType="VARCHAR" property="goodsSubtitle" />
    <result column="goods_no" jdbcType="VARCHAR" property="goodsNo" />
    <result column="goods_keywords" jdbcType="VARCHAR" property="goodsKeywords" />
    <result column="goods_brief" jdbcType="VARCHAR" property="goodsBrief" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_old_price" jdbcType="DECIMAL" property="goodsOldPrice" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="goods_score" jdbcType="DECIMAL" property="goodsScore" />
    <result column="goods_deno" jdbcType="VARCHAR" property="goodsDeno" />
    <result column="goods_detail_img" jdbcType="VARCHAR" property="goodsDetailImg" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="is_delete" jdbcType="CHAR" property="isDelete" />
    <result column="is_upper_lower_racks" jdbcType="CHAR" property="isUpperLowerRacks" />
    <result column="is_recommend" jdbcType="CHAR" property="isRecommend" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gow.beau.storage.auto.model.Goods">
    <result column="goods_detail_desc" jdbcType="LONGVARCHAR" property="goodsDetailDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, goods_name, goods_spec, goods_subtitle, goods_no, goods_keywords, 
    goods_brief, goods_price, goods_old_price, goods_img, goods_score, goods_deno, goods_detail_img, 
    goods_number, is_delete, is_upper_lower_racks, is_recommend, create_time
  </sql>
  <sql id="Blob_Column_List">
    goods_detail_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gow.beau.storage.auto.model.GoodsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from gow_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gow.beau.storage.auto.model.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gow_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from gow_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gow_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gow.beau.storage.auto.model.GoodsExample">
    delete from gow_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.gow.beau.storage.auto.model.Goods" useGeneratedKeys="true">
    insert into gow_goods (category_id, goods_name, goods_spec, 
      goods_subtitle, goods_no, goods_keywords, 
      goods_brief, goods_price, goods_old_price, 
      goods_img, goods_score, goods_deno, 
      goods_detail_img, goods_number, is_delete, 
      is_upper_lower_racks, is_recommend, create_time, 
      goods_detail_desc)
    values (#{categoryId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{goodsSpec,jdbcType=VARCHAR}, 
      #{goodsSubtitle,jdbcType=VARCHAR}, #{goodsNo,jdbcType=VARCHAR}, #{goodsKeywords,jdbcType=VARCHAR}, 
      #{goodsBrief,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, #{goodsOldPrice,jdbcType=DECIMAL}, 
      #{goodsImg,jdbcType=VARCHAR}, #{goodsScore,jdbcType=DECIMAL}, #{goodsDeno,jdbcType=VARCHAR}, 
      #{goodsDetailImg,jdbcType=VARCHAR}, #{goodsNumber,jdbcType=INTEGER}, #{isDelete,jdbcType=CHAR}, 
      #{isUpperLowerRacks,jdbcType=CHAR}, #{isRecommend,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{goodsDetailDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.gow.beau.storage.auto.model.Goods" useGeneratedKeys="true">
    insert into gow_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsSpec != null">
        goods_spec,
      </if>
      <if test="goodsSubtitle != null">
        goods_subtitle,
      </if>
      <if test="goodsNo != null">
        goods_no,
      </if>
      <if test="goodsKeywords != null">
        goods_keywords,
      </if>
      <if test="goodsBrief != null">
        goods_brief,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsOldPrice != null">
        goods_old_price,
      </if>
      <if test="goodsImg != null">
        goods_img,
      </if>
      <if test="goodsScore != null">
        goods_score,
      </if>
      <if test="goodsDeno != null">
        goods_deno,
      </if>
      <if test="goodsDetailImg != null">
        goods_detail_img,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="isUpperLowerRacks != null">
        is_upper_lower_racks,
      </if>
      <if test="isRecommend != null">
        is_recommend,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="goodsDetailDesc != null">
        goods_detail_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="categoryId != null">
        #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpec != null">
        #{goodsSpec,jdbcType=VARCHAR},
      </if>
      <if test="goodsSubtitle != null">
        #{goodsSubtitle,jdbcType=VARCHAR},
      </if>
      <if test="goodsNo != null">
        #{goodsNo,jdbcType=VARCHAR},
      </if>
      <if test="goodsKeywords != null">
        #{goodsKeywords,jdbcType=VARCHAR},
      </if>
      <if test="goodsBrief != null">
        #{goodsBrief,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsOldPrice != null">
        #{goodsOldPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsScore != null">
        #{goodsScore,jdbcType=DECIMAL},
      </if>
      <if test="goodsDeno != null">
        #{goodsDeno,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetailImg != null">
        #{goodsDetailImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=CHAR},
      </if>
      <if test="isUpperLowerRacks != null">
        #{isUpperLowerRacks,jdbcType=CHAR},
      </if>
      <if test="isRecommend != null">
        #{isRecommend,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsDetailDesc != null">
        #{goodsDetailDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gow.beau.storage.auto.model.GoodsExample" resultType="java.lang.Long">
    select count(*) from gow_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gow_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpec != null">
        goods_spec = #{record.goodsSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSubtitle != null">
        goods_subtitle = #{record.goodsSubtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNo != null">
        goods_no = #{record.goodsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsKeywords != null">
        goods_keywords = #{record.goodsKeywords,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsBrief != null">
        goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsOldPrice != null">
        goods_old_price = #{record.goodsOldPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsImg != null">
        goods_img = #{record.goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsScore != null">
        goods_score = #{record.goodsScore,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsDeno != null">
        goods_deno = #{record.goodsDeno,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDetailImg != null">
        goods_detail_img = #{record.goodsDetailImg,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNumber != null">
        goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=CHAR},
      </if>
      <if test="record.isUpperLowerRacks != null">
        is_upper_lower_racks = #{record.isUpperLowerRacks,jdbcType=CHAR},
      </if>
      <if test="record.isRecommend != null">
        is_recommend = #{record.isRecommend,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsDetailDesc != null">
        goods_detail_desc = #{record.goodsDetailDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update gow_goods
    set id = #{record.id,jdbcType=BIGINT},
      category_id = #{record.categoryId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spec = #{record.goodsSpec,jdbcType=VARCHAR},
      goods_subtitle = #{record.goodsSubtitle,jdbcType=VARCHAR},
      goods_no = #{record.goodsNo,jdbcType=VARCHAR},
      goods_keywords = #{record.goodsKeywords,jdbcType=VARCHAR},
      goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_old_price = #{record.goodsOldPrice,jdbcType=DECIMAL},
      goods_img = #{record.goodsImg,jdbcType=VARCHAR},
      goods_score = #{record.goodsScore,jdbcType=DECIMAL},
      goods_deno = #{record.goodsDeno,jdbcType=VARCHAR},
      goods_detail_img = #{record.goodsDetailImg,jdbcType=VARCHAR},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=CHAR},
      is_upper_lower_racks = #{record.isUpperLowerRacks,jdbcType=CHAR},
      is_recommend = #{record.isRecommend,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      goods_detail_desc = #{record.goodsDetailDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gow_goods
    set id = #{record.id,jdbcType=BIGINT},
      category_id = #{record.categoryId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spec = #{record.goodsSpec,jdbcType=VARCHAR},
      goods_subtitle = #{record.goodsSubtitle,jdbcType=VARCHAR},
      goods_no = #{record.goodsNo,jdbcType=VARCHAR},
      goods_keywords = #{record.goodsKeywords,jdbcType=VARCHAR},
      goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_old_price = #{record.goodsOldPrice,jdbcType=DECIMAL},
      goods_img = #{record.goodsImg,jdbcType=VARCHAR},
      goods_score = #{record.goodsScore,jdbcType=DECIMAL},
      goods_deno = #{record.goodsDeno,jdbcType=VARCHAR},
      goods_detail_img = #{record.goodsDetailImg,jdbcType=VARCHAR},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=CHAR},
      is_upper_lower_racks = #{record.isUpperLowerRacks,jdbcType=CHAR},
      is_recommend = #{record.isRecommend,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gow.beau.storage.auto.model.Goods">
    update gow_goods
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpec != null">
        goods_spec = #{goodsSpec,jdbcType=VARCHAR},
      </if>
      <if test="goodsSubtitle != null">
        goods_subtitle = #{goodsSubtitle,jdbcType=VARCHAR},
      </if>
      <if test="goodsNo != null">
        goods_no = #{goodsNo,jdbcType=VARCHAR},
      </if>
      <if test="goodsKeywords != null">
        goods_keywords = #{goodsKeywords,jdbcType=VARCHAR},
      </if>
      <if test="goodsBrief != null">
        goods_brief = #{goodsBrief,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsOldPrice != null">
        goods_old_price = #{goodsOldPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsImg != null">
        goods_img = #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsScore != null">
        goods_score = #{goodsScore,jdbcType=DECIMAL},
      </if>
      <if test="goodsDeno != null">
        goods_deno = #{goodsDeno,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetailImg != null">
        goods_detail_img = #{goodsDetailImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=CHAR},
      </if>
      <if test="isUpperLowerRacks != null">
        is_upper_lower_racks = #{isUpperLowerRacks,jdbcType=CHAR},
      </if>
      <if test="isRecommend != null">
        is_recommend = #{isRecommend,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsDetailDesc != null">
        goods_detail_desc = #{goodsDetailDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gow.beau.storage.auto.model.Goods">
    update gow_goods
    set category_id = #{categoryId,jdbcType=BIGINT},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_spec = #{goodsSpec,jdbcType=VARCHAR},
      goods_subtitle = #{goodsSubtitle,jdbcType=VARCHAR},
      goods_no = #{goodsNo,jdbcType=VARCHAR},
      goods_keywords = #{goodsKeywords,jdbcType=VARCHAR},
      goods_brief = #{goodsBrief,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_old_price = #{goodsOldPrice,jdbcType=DECIMAL},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_score = #{goodsScore,jdbcType=DECIMAL},
      goods_deno = #{goodsDeno,jdbcType=VARCHAR},
      goods_detail_img = #{goodsDetailImg,jdbcType=VARCHAR},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=CHAR},
      is_upper_lower_racks = #{isUpperLowerRacks,jdbcType=CHAR},
      is_recommend = #{isRecommend,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      goods_detail_desc = #{goodsDetailDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gow.beau.storage.auto.model.Goods">
    update gow_goods
    set category_id = #{categoryId,jdbcType=BIGINT},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_spec = #{goodsSpec,jdbcType=VARCHAR},
      goods_subtitle = #{goodsSubtitle,jdbcType=VARCHAR},
      goods_no = #{goodsNo,jdbcType=VARCHAR},
      goods_keywords = #{goodsKeywords,jdbcType=VARCHAR},
      goods_brief = #{goodsBrief,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_old_price = #{goodsOldPrice,jdbcType=DECIMAL},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_score = #{goodsScore,jdbcType=DECIMAL},
      goods_deno = #{goodsDeno,jdbcType=VARCHAR},
      goods_detail_img = #{goodsDetailImg,jdbcType=VARCHAR},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=CHAR},
      is_upper_lower_racks = #{isUpperLowerRacks,jdbcType=CHAR},
      is_recommend = #{isRecommend,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>