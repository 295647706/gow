<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gow.beau.storage.auto.mapper.PaymentMapper">
  <resultMap id="BaseResultMap" type="com.gow.beau.storage.auto.model.Payment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="notify_url" jdbcType="VARCHAR" property="notifyUrl" />
    <result column="return_url" jdbcType="VARCHAR" property="returnUrl" />
    <result column="api_url" jdbcType="VARCHAR" property="apiUrl" />
    <result column="app_ecret" jdbcType="VARCHAR" property="appEcret" />
    <result column="expire" jdbcType="INTEGER" property="expire" />
    <result column="default_price" jdbcType="DECIMAL" property="defaultPrice" />
    <result column="is_default_price" jdbcType="CHAR" property="isDefaultPrice" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="use_type" jdbcType="CHAR" property="useType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, path, notify_url, return_url, api_url, app_ecret, expire, default_price, is_default_price, 
    uid, use_type
  </sql>
  <select id="selectByExample" parameterType="com.gow.beau.storage.auto.model.PaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gow_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gow_payment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gow_payment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gow.beau.storage.auto.model.PaymentExample">
    delete from gow_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.gow.beau.storage.auto.model.Payment" useGeneratedKeys="true">
    insert into gow_payment (path, notify_url, return_url, 
      api_url, app_ecret, expire, 
      default_price, is_default_price, uid, 
      use_type)
    values (#{path,jdbcType=VARCHAR}, #{notifyUrl,jdbcType=VARCHAR}, #{returnUrl,jdbcType=VARCHAR}, 
      #{apiUrl,jdbcType=VARCHAR}, #{appEcret,jdbcType=VARCHAR}, #{expire,jdbcType=INTEGER}, 
      #{defaultPrice,jdbcType=DECIMAL}, #{isDefaultPrice,jdbcType=CHAR}, #{uid,jdbcType=VARCHAR}, 
      #{useType,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.gow.beau.storage.auto.model.Payment" useGeneratedKeys="true">
    insert into gow_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="path != null">
        path,
      </if>
      <if test="notifyUrl != null">
        notify_url,
      </if>
      <if test="returnUrl != null">
        return_url,
      </if>
      <if test="apiUrl != null">
        api_url,
      </if>
      <if test="appEcret != null">
        app_ecret,
      </if>
      <if test="expire != null">
        expire,
      </if>
      <if test="defaultPrice != null">
        default_price,
      </if>
      <if test="isDefaultPrice != null">
        is_default_price,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="useType != null">
        use_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="notifyUrl != null">
        #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="returnUrl != null">
        #{returnUrl,jdbcType=VARCHAR},
      </if>
      <if test="apiUrl != null">
        #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="appEcret != null">
        #{appEcret,jdbcType=VARCHAR},
      </if>
      <if test="expire != null">
        #{expire,jdbcType=INTEGER},
      </if>
      <if test="defaultPrice != null">
        #{defaultPrice,jdbcType=DECIMAL},
      </if>
      <if test="isDefaultPrice != null">
        #{isDefaultPrice,jdbcType=CHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="useType != null">
        #{useType,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gow.beau.storage.auto.model.PaymentExample" resultType="java.lang.Long">
    select count(*) from gow_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gow_payment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyUrl != null">
        notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.returnUrl != null">
        return_url = #{record.returnUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.apiUrl != null">
        api_url = #{record.apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.appEcret != null">
        app_ecret = #{record.appEcret,jdbcType=VARCHAR},
      </if>
      <if test="record.expire != null">
        expire = #{record.expire,jdbcType=INTEGER},
      </if>
      <if test="record.defaultPrice != null">
        default_price = #{record.defaultPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.isDefaultPrice != null">
        is_default_price = #{record.isDefaultPrice,jdbcType=CHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.useType != null">
        use_type = #{record.useType,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gow_payment
    set id = #{record.id,jdbcType=BIGINT},
      path = #{record.path,jdbcType=VARCHAR},
      notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      return_url = #{record.returnUrl,jdbcType=VARCHAR},
      api_url = #{record.apiUrl,jdbcType=VARCHAR},
      app_ecret = #{record.appEcret,jdbcType=VARCHAR},
      expire = #{record.expire,jdbcType=INTEGER},
      default_price = #{record.defaultPrice,jdbcType=DECIMAL},
      is_default_price = #{record.isDefaultPrice,jdbcType=CHAR},
      uid = #{record.uid,jdbcType=VARCHAR},
      use_type = #{record.useType,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gow.beau.storage.auto.model.Payment">
    update gow_payment
    <set>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="notifyUrl != null">
        notify_url = #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="returnUrl != null">
        return_url = #{returnUrl,jdbcType=VARCHAR},
      </if>
      <if test="apiUrl != null">
        api_url = #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="appEcret != null">
        app_ecret = #{appEcret,jdbcType=VARCHAR},
      </if>
      <if test="expire != null">
        expire = #{expire,jdbcType=INTEGER},
      </if>
      <if test="defaultPrice != null">
        default_price = #{defaultPrice,jdbcType=DECIMAL},
      </if>
      <if test="isDefaultPrice != null">
        is_default_price = #{isDefaultPrice,jdbcType=CHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="useType != null">
        use_type = #{useType,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gow.beau.storage.auto.model.Payment">
    update gow_payment
    set path = #{path,jdbcType=VARCHAR},
      notify_url = #{notifyUrl,jdbcType=VARCHAR},
      return_url = #{returnUrl,jdbcType=VARCHAR},
      api_url = #{apiUrl,jdbcType=VARCHAR},
      app_ecret = #{appEcret,jdbcType=VARCHAR},
      expire = #{expire,jdbcType=INTEGER},
      default_price = #{defaultPrice,jdbcType=DECIMAL},
      is_default_price = #{isDefaultPrice,jdbcType=CHAR},
      uid = #{uid,jdbcType=VARCHAR},
      use_type = #{useType,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>