<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gow.beau.storage.auto.mapper.PaytypeMapper">
  <resultMap id="BaseResultMap" type="com.gow.beau.storage.auto.model.Paytype">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pay_type" jdbcType="CHAR" property="payType" />
    <result column="is_use" jdbcType="CHAR" property="isUse" />
    <result column="is_default" jdbcType="CHAR" property="isDefault" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="CHAR" property="isDelete" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pay_type, is_use, is_default, create_time, is_delete, content
  </sql>
  <select id="selectByExample" parameterType="com.gow.beau.storage.auto.model.PaytypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gow_paytype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gow_paytype
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gow_paytype
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gow.beau.storage.auto.model.PaytypeExample">
    delete from gow_paytype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.gow.beau.storage.auto.model.Paytype" useGeneratedKeys="true">
    insert into gow_paytype (pay_type, is_use, is_default, 
      create_time, is_delete, content
      )
    values (#{payType,jdbcType=CHAR}, #{isUse,jdbcType=CHAR}, #{isDefault,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=CHAR}, #{content,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.gow.beau.storage.auto.model.Paytype" useGeneratedKeys="true">
    insert into gow_paytype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payType != null">
        pay_type,
      </if>
      <if test="isUse != null">
        is_use,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payType != null">
        #{payType,jdbcType=CHAR},
      </if>
      <if test="isUse != null">
        #{isUse,jdbcType=CHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=CHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gow.beau.storage.auto.model.PaytypeExample" resultType="java.lang.Long">
    select count(*) from gow_paytype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gow_paytype
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=CHAR},
      </if>
      <if test="record.isUse != null">
        is_use = #{record.isUse,jdbcType=CHAR},
      </if>
      <if test="record.isDefault != null">
        is_default = #{record.isDefault,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=CHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gow_paytype
    set id = #{record.id,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=CHAR},
      is_use = #{record.isUse,jdbcType=CHAR},
      is_default = #{record.isDefault,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=CHAR},
      content = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gow.beau.storage.auto.model.Paytype">
    update gow_paytype
    <set>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=CHAR},
      </if>
      <if test="isUse != null">
        is_use = #{isUse,jdbcType=CHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=CHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gow.beau.storage.auto.model.Paytype">
    update gow_paytype
    set pay_type = #{payType,jdbcType=CHAR},
      is_use = #{isUse,jdbcType=CHAR},
      is_default = #{isDefault,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=CHAR},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>